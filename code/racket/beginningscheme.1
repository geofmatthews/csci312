#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 45 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 2507 0 26 3 10 #"#lang plai"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 12 #"racket/trace"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";; CSCI 410 Lecture Zero"
0 0 4 29 1 #"\n"
0 0 17 3 21 #";; Scheme Programming"
0 0 4 29 1 #"\n"
0 0 17 3 20 #";; Geoffrey Matthews"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 64
#";; Read chapters 1 and 2 in _The Scheme Programming Language_ by"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";; Dybvig, available online at www.scheme.com"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"astring"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 19 3 4 #"\"foo"
0 0 19 29 1 #"\n"
0 0 19 3 23 #"                bar bar"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"buz"
0 0 19 29 1 #"\n"
0 0 19 3 26 #"basssssssssssssss @#$@#@$\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 19 3 41 #"\"Difference between display and print:\\n\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 7 #"astring"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 14 3 7 #"astring"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 44 #";; Notice neither prints a newline by itself"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 17 3 1 #" "
0 0 19 3 55
#"\"Formatted output of things: ~a and other things: ~a\\n\""
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"aThing"
0 0 17 3 1 #" "
0 0 20 3 4 #"1234"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 34 #"\"Two ways to define procedures:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"square1"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 7 #"square2"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 30 #";; We will use the second way."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 10 #"testnumber"
0 0 17 3 1 #" "
0 0 20 3 5 #"23423"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"square1"
0 0 17 3 1 #" "
0 0 14 3 10 #"testnumber"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 7 #"square2"
0 0 17 3 1 #" "
0 0 14 3 10 #"testnumber"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 29 #"\"Two ways to quote things:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #";; We will use the first way"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 59
#"\"Rational numbers and many other builtin types provided:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 20 3 3 #"2/3"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 35 #"\"Dot notation vs. list notation:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 26 3 1 #"."
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 26 3 1 #"."
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 26 3 1 #"."
0 0 17 3 1 #" "
0 0 22 3 5 #"())))"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 5 #"())))"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #";; Make sure you can also draw box and arrow diagrams for random col"
 #"lections"
) 0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #";; of cons cells, lists, dotted lists, etc.  For example, how would "
 #"this"
) 0 0 17 29 1 #"\n"
0 0 17 3 46 #";; look internally, and how does it print out?"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 24 #"\"How does this print:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"d"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"g"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 44 #"\"car's and cdr's can be smashed together:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 8 #"testlist"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 1 #"e"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 8 #"testlist"
0 0 22 3 3 #")))"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 5 #"cdadr"
0 0 17 3 1 #" "
0 0 14 3 8 #"testlist"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 35 #"\"let introduces local variables:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 21 #";; This doesn't work:"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"(let ((x 3)"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"       (y (* 5 x)))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"   (* x y))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 71
(
 #"\"Use nested let's if you want new variables to depend on each other"
 #":\\n\""
) 0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 23 #"\"Shadowed variables:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 20 3 5 #"99999"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 20 3 4 #"1000"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 20 3 5 #"10000"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 36 #"\"Functions are first class values: \""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 14 3 1 #"+"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 31 #"\"lambda and let are similar:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 45 #"\"Free variables can be captured by lambda:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"sam"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"am"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 54 #"\"Free variables remain captured even when shadowed:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"sam"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"mary"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"am"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 29 #"\"lambda creates a closure:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 2 #"f1"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"sam"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"f1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"am"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"nobody"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"f1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"am"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 35 #"\"Functions can return functions:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 5 #"adder"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 1 #"g"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"8"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 4 #"1000"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"adder"
0 0 17 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 44 #"\"We can use closures to store local data:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 6 #"triple"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"eqv?"
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"first"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 4 #"eqv?"
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"second"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 4 #"eqv?"
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"third"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"triple"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 17 3 1 #" "
0 0 20 3 1 #"9"
0 0 17 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"triple"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"hello"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"goodbye"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"whatever"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"first"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"second"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"third"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"first"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 54 #"\"We can use closures to create objects like stacks:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 5 #"stack"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 9 #"the-stack"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 4 #"()))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 26 3 1 #"."
0 0 17 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"push"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 17 3 1 #" "
0 0 14 3 9 #"the-stack"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 9 #"the-stack"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"top"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 9 #"the-stack"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 17 3 1 #" "
0 0 14 3 9 #"the-stack"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 9 #"the-stack"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                 "
0 0 14 3 3 #"top"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 17 3 1 #" "
0 0 19 3 29 #"\"Unknown stack operator:  ~a\""
0 0 17 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 7 #")))))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 2 #"s1"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 2 #"s2"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"push"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 17 3 1 #" "
0 0 14 3 1 #"e"
0 0 17 3 1 #" "
0 0 14 3 1 #"f"
0 0 17 3 1 #" "
0 0 14 3 1 #"g"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s2"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"push"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"anne"
0 0 17 3 1 #" "
0 0 14 3 3 #"bob"
0 0 17 3 1 #" "
0 0 14 3 5 #"carol"
0 0 17 3 1 #" "
0 0 14 3 4 #"dave"
0 0 17 3 1 #" "
0 0 14 3 5 #"ethan"
0 0 17 3 1 #" "
0 0 14 3 4 #"fred"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s1"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s2"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s2"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s2"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"pop"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 19 #"\"List recursion:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 11 #"list-length"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"list-length"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 17 3 1 #" "
0 0 14 3 11 #"list-length"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"list-length"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 19 #"\"Tail recursion:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 16 #"list-length-tail"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 16 #"list-length-tail"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 17 3 1 #" "
0 0 14 3 16 #"list-length-tail"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 16 #"list-length-tail"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 32 #"\"Nontail copy  vs. tail copy:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 9 #"list-copy"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"list-copy"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 17 3 1 #" "
0 0 14 3 9 #"list-copy"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 9 #"list-copy"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 14 #"list-copy-tail"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 14 #"list-copy-tail"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 17 3 1 #" "
0 0 14 3 14 #"list-copy-tail"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 14 #"list-copy-tail"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 17 3 1 #" "
0 0 14 3 1 #"b"
0 0 17 3 1 #" "
0 0 14 3 1 #"c"
0 0 17 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 19 #"\"Tree recursion:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 9 #"tree-copy"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"tree"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 17 3 1 #" "
0 0 14 3 4 #"tree"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 14 3 4 #"tree"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"tree-copy"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 4 #"tree"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"tree-copy"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 14 3 4 #"tree"
0 0 22 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"trace"
0 0 17 3 1 #" "
0 0 14 3 9 #"tree-copy"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 9 #"tree-copy"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"((("
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 37 #"\"Named let simplifies some things:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 24 #"\"With named function:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 3 #"fib"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 19 #"\"With named let:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 3 #"fib"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 49 #"\"A random named let example, for simple loops:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 17 3 1 #" "
0 0 14 3 3 #"foo"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"z"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 4 #"()))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 3 #"foo"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ha"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 23 #"\"Same thing with do:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 2 #"do"
0 0 17 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"1"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 1 #"z"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"()"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ha"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 1 #">"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 17 3 1 #" "
0 0 19 3 48 #"\"Demonstration of define-type from PLAI book:\\n\""
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #";; Datatypes for 2d shapes"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 17 3 1 #" "
0 0 14 3 8 #"position"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"3d"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"z"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 17 3 1 #" "
0 0 14 3 5 #"shape"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 14 3 3 #"2d?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"radius"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"lower-left"
0 0 17 3 1 #" "
0 0 14 3 3 #"2d?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"width"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"height"
0 0 17 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #";; area : shape -> number"
0 0 17 29 1 #"\n"
0 0 17 3 44 #";; Purpose: to compute the area of 2d shapes"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"area"
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"type-case"
0 0 17 3 1 #" "
0 0 14 3 5 #"shape"
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 14 3 6 #"radius"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 2 #"pi"
0 0 17 3 1 #" "
0 0 14 3 6 #"radius"
0 0 17 3 1 #" "
0 0 14 3 6 #"radius"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"lower-left"
0 0 17 3 1 #" "
0 0 14 3 5 #"width"
0 0 17 3 1 #" "
0 0 14 3 6 #"height"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 17 3 1 #" "
0 0 14 3 5 #"width"
0 0 17 3 1 #" "
0 0 14 3 6 #"height"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"area"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 7 #"314.159"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"area"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 17 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"5"
0 0 17 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 20 3 3 #"250"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 29 #";; center : shape -> position"
0 0 17 29 1 #"\n"
0 0 17 3 45 #";; Purpose : to find the center of a 2d shape"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"type-case"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 14 3 5 #"shape"
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 14 3 6 #"radius"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 14 3 6 #"center"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"lower-left"
0 0 17 3 1 #" "
0 0 14 3 5 #"width"
0 0 17 3 1 #" "
0 0 14 3 6 #"height"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 9 #"type-case"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 12 #"            "
0 0 14 3 8 #"position"
0 0 17 3 1 #" "
0 0 14 3 10 #"lower-left"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"x"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 17 3 1 #" "
0 0 14 3 5 #"width"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 17 3 1 #" "
0 0 14 3 1 #"y"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 17 3 1 #" "
0 0 14 3 6 #"height"
0 0 17 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 17 3 1 #" "
0 0 19 3 40 #"\"square shape does not have 2d position\""
0 0 17 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 17 3 1 #" "
0 0 20 3 2 #"12"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 2 #"99"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 17 3 1 #" "
0 0 20 3 2 #"12"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"test"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 17 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 2 #"10"
0 0 17 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"2d"
0 0 17 3 1 #" "
0 0 20 3 2 #"15"
0 0 17 3 1 #" "
0 0 20 3 3 #"150"
0 0 22 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0           0
